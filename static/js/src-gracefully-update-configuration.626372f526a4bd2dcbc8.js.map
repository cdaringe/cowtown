{"version":3,"sources":["/home/circleci/project/packages/docs/src/gracefully-update-configuration.mdx"],"names":["MDXContent","props","_this","Object","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","layout","_this$props","components","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","name","id","parentName","React","Component","isMDXComponent"],"mappings":"s6BAQqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,OAAS,KAFGP,wEAIV,IAAAQ,EAC0BL,KAAKJ,MAA9BU,EADDD,EACCC,WADDR,OAAAS,EAAA,EAAAT,CAAAO,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYV,MAAO,CAACiB,GAAK,oCAAvD,mCACrCL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,kCAA4EE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,KAArD,OAA5E,uPAGAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,sHAEAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,GAC9BE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,oEAA+HN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,cAA/H,QACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAArD,+GAEAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,0HACYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,SADZ,gNArBwCC,IAAMC,qYA4B9CrB,EAAWsB,gBAAiB","file":"static/js/src-gracefully-update-configuration.7b1724f5.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"gracefully-update-configuration\"}}>{`gracefully update configuration`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`it may be the case that you do `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`not`}</MDXTag>{` wish to teardown your service simply to swap\nconfiguration data. if your application has requests inflight, swapping shared, mutable configuration whilst\noutstanding handlers are in proccess may introduce nondeteriminstic or fatal behavior.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`if your application needs to swap config at runtime, try to handle these changes\ngracefully.  i recommend either:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`gracefully restarting the server on receipt of new configuration `}<MDXTag name=\"em\" components={components} parentName=\"li\">{`in process`}</MDXTag>{`, or`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`maintaining a stack of immutable configs, only of which one is attached to a request through its lifecycle`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`in the latter option, when an older configuration object is no longer consumed by any outstanding requests,\nit can be `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`shift`}</MDXTag>{`ed off of the stack.  the later option also assumes that middlewares\ncan functionl using configuration from of the request context alone.  if this is not the\ncase, fall back to the first option.`}</MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "],"sourceRoot":""}