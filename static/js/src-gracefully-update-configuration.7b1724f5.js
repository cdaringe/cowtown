(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"./src/gracefully-update-configuration.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return p});var a=t("../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=t("../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),r=t("../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js"),s=t("../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"),i=t("../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"),l=t("../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"),c=t("../../node_modules/react/index.js"),m=t.n(c),u=t("../../node_modules/@mdx-js/tag/dist/index.js"),p=function(e){function n(e){var t;return Object(o.a)(this,n),(t=Object(s.a)(this,Object(i.a)(n).call(this,e))).layout=null,t}return Object(l.a)(n,e),Object(r.a)(n,[{key:"render",value:function(){var e=this.props,n=e.components;Object(a.a)(e,["components"]);return m.a.createElement(u.MDXTag,{name:"wrapper",components:n},m.a.createElement(u.MDXTag,{name:"h1",components:n,props:{id:"gracefully-update-configuration"}},"gracefully update configuration"),m.a.createElement(u.MDXTag,{name:"p",components:n},"it may be the case that you do ",m.a.createElement(u.MDXTag,{name:"em",components:n,parentName:"p"},"not")," wish to teardown your service simply to swap\nconfiguration data. if your application has requests inflight, swapping shared, mutable configuration whilst\noutstanding handlers are in proccess may introduce nondeteriminstic or fatal behavior."),m.a.createElement(u.MDXTag,{name:"p",components:n},"if your application needs to swap config at runtime, try to handle these changes\ngracefully.  i recommend either:"),m.a.createElement(u.MDXTag,{name:"ul",components:n},m.a.createElement(u.MDXTag,{name:"li",components:n,parentName:"ul"},"gracefully restarting the server on receipt of new configuration ",m.a.createElement(u.MDXTag,{name:"em",components:n,parentName:"li"},"in process"),", or"),m.a.createElement(u.MDXTag,{name:"li",components:n,parentName:"ul"},"maintaining a stack of immutable configs, only of which one is attached to a request through its lifecycle")),m.a.createElement(u.MDXTag,{name:"p",components:n},"in the latter option, when an older configuration object is no longer consumed by any outstanding requests,\nit can be ",m.a.createElement(u.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"shift"),"ed off of the stack.  the later option also assumes that middlewares\ncan functionl using configuration from of the request context alone.  if this is not the\ncase, fall back to the first option."))}}]),n}(m.a.Component);"undefined"!==typeof p&&p&&p===Object(p)&&Object.defineProperty(p,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/gracefully-update-configuration.mdx"}}),"undefined"!==typeof p&&p&&p===Object(p)&&Object.defineProperty(p,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/gracefully-update-configuration.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=src-gracefully-update-configuration.ad1c1451b82f83e13e39.js.map