{"version":3,"sources":["/home/circleci/project/packages/docs/src/isomorphic-rendering.mdx"],"names":["MDXContent","props","_this","Object","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","layout","_this$props","components","_home_circleci_project_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","name","id","parentName","href","className","React","Component","isMDXComponent"],"mappings":"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","file":"static/js/src-isomorphic-rendering.f29bb388.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"isomorphic-rendering\"}}>{`isomorphic rendering`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"overview\"}}>{`overview`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`isomorphic rendering, whilst considered an advanced concept, is conceptually simple.\nthe objective is to render a complete html page when a user requests your website, such that\nthey may begin viewing content immediately. once the page loads, the interactive\nweb-application experience downloads and instantiates itself, asyncronously.\nthe final result is that user gets content faster, as hence perceives your application to\nbe faster.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`there are many technology stacks, front-end and back-end, that enable this workflow.\nthis particular demonstration uses:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://reactjs.org\"}}>{`react`}</MDXTag>{` & `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://redux.js.org\"}}>{`redux`}</MDXTag>{` for the ui application`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://www.npmjs.com/package/koa-parcel-middleware\"}}>{`koa-parcel-middleware`}</MDXTag>{` for integrating the ui application with the server`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`koa`}</MDXTag>{` for our server`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"strategy\"}}>{`strategy`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`create a ui application bundler instance.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`in this case, we will use parcel's bundler.  why do you need a bundler?  `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://webpack.js.org/concepts/why-webpack/\"}}>{`webpack's doc cover this well`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`create a static asset middleware for serving ui assets (images, css files, etc)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`create a parcel middleware `}<MDXTag name=\"em\" components={components} parentName=\"li\">{`using the bundler instance`}</MDXTag>{` and the static fileserver middleware`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`this will compile your ui and serve it to browsers on request`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`register the middleware.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"demonstration\"}}>{`demonstration`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`the web-application by default starts with minimal state.\nit's a basic counter app starting with the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`count`}</MDXTag>{` at `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`0`}</MDXTag>{`. however,\nyou will see that when using server-side rendering, we provide an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`initialState`}</MDXTag>{` where\nthe count is equal to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`99`}</MDXTag>{`.  because we rendered a react app with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`count === 99`}</MDXTag>{`, the\nresultant html shows 99 to the user immediately.  once the javascript finishes\ndownloading in the background, the increment/decrement buttons work starting from 99, because we `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`hydrate`}</MDXTag>{`d\nthe react app with the same initial state (see `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`window.INITIAL_STATE`}</MDXTag>{`)!`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`isomorphic react redux app`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-html\"}}>{`<!--\n  react-redux-app/index.html\n  parcel _and_ our parcel middleware will use this html\n  template. note that parcel wants src=app.tsx as an\n  entrypoint, which of course isn't a valid js file ;)\n-->\n<html>\n<head>\n  <title>react-redux ssr demo</title>\n  <!-- head-content -->\n</head>\n  <div id=\"app\"><!-- ssr-content --></div>\n  <script src=\"app.tsx\"></script>\n</html>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-typescript\"}}>{`// react-redux-app/app.tsx - a barebones react-redux application\nconst DEFAULT_STATE = { count: 0 }\nfunction reducer (state = DEFAULT_STATE, action: any) {\n  // ...\n}\n\nexport const App = connect(\n  state => state,\n  dispatch => ({\n    inc: () => dispatch({ type: INC }),\n    dec: () => dispatch({ type: DEC })\n  })\n)((props: any) => (\n  <div>\n    {props.count}\n    <button onClick={props.dec}>-</button>\n    <button onClick={props.inc}>+</button>\n  </div>\n))\n\nexport const ConnectedApp = ({ store }: { store: Store }) => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nexport const createAppStore = (initialState: any) =>\n  createStore(reducer, initialState)\n\nif (isNode) {\n  // render an html page in the server process,\n  // and the react application to string from within\n} else {\n  const appNode = document.getElementById('app')\n  ReactDOM.hydrate(\n    <ConnectedApp store={createAppStore((window as any).INITIAL_STATE)} />,\n    appNode\n  )\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-typescript\"}}>{`// react-redux-app/server.ts\nconst ENTRY_FILENAME = path.resolve(__dirname, 'index.html')\nasync function start () {\n  const outFile = path.resolve(__dirname, 'dist', 'index.html')\n  const app = new Koa()\n  const outDir = path.resolve(__dirname, 'dist')\n  // create a ui application bundler\n  const options = {\n    outDir,\n    outFile,\n    watch: process.env.NODE_ENV === 'development',\n    minify: process.env.NODE_ENV !== 'development',\n    scopeHoist: false,\n    hmr: process.env.NODE_ENV === 'development',\n    detailedReport: false\n  }\n  const bundler = new Bundler(ENTRY_FILENAME, options)\n  bundler.bundle()\n  const staticMiddleware = serveStatic(outDir)\n  const isomorphicRenderMiddleware = createMiddleware({\n    bundler,\n    renderHtmlMiddleware: async (ctx, next) => {\n      // stream the html file, but with react/redux data spliced in\n      // parcel has already compiled our app now, and has\n      // a fancy _proper_ html entrypoint at outFile, which has all of our original\n      // html + comments, but modified to point to built assets (e.g. js files,\n      // versus tsx files). serve that html asset, with redux state _and_\n      // a stringified react => html tree!\n      const outFileBuffer = await fs.readFile(outFile)\n      const [preHeadClose, postHeadClose ] = outFileBuffer.toString()\n        .split(/<!--.*head-content.*-->/)\n      const [ preAppEntry, postAppEntry ] = postHeadClose\n        .split(/<!--.*ssr-content.*-->/)\n      ctx.status = 200\n      const htmlStream = new CombinedStream()\n      const initialState = { count: 99 } // you'd probably do something more interesting here\n      ;[\n        preHeadClose,\n        // send the initial state date to the browser, so it can use it for hydration\n        \\`<script>window.INITIAL_STATE = \\${JSON.stringify(initialState)}</script>\\`,\n        preAppEntry,\n        // render react's html using our desired initial state\n        ReactDOMServer.renderToNodeStream(ConnectedApp({ store: createAppStore(initialState) })),\n        postAppEntry\n      ].map(content => htmlStream.append(content))\n      ctx.body = htmlStream\n      ctx.type = 'html'\n      await next()\n    },\n    staticMiddleware\n  })\n  app.use((ctx, next) => {\n    return isomorphicRenderMiddleware(ctx, next)\n  })\n  app.listen(3000)\n}\nstart()\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "],"sourceRoot":""}