version: 2
jobs:
  build:
    docker:
      - image: circleci/node:11.9.0
    steps:
      - checkout
      # - run:
      #     name: install yarn
      #     command: npm install -g yarn
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: bootstrap
          command: NODE_ENV=development yarn bootstrap
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          command: |
            set -euxo pipefail
            # compile the scripts/ dir, which has ts script that generate artifacts
            # that _other_ ts files import.  ya, i created a chicken-egg scenario. uncool.
            _script_build_res=$(cd packages/docs && npx tsc || true);
            # give surge.sh a nice entrypoint for urls that aren't back by
              # html files
            _docs_build_res=$(cd packages/docs && yarn build)
            # ^ end hacks
            yarn build
            yarn test
            yarn lint
            cd packages/docs
            if [ "$CIRCLE_BRANCH" = "master" ];
            then
              cp .docz/dist/index.html .docz/dist/200.html
              npx surge .docz/dist/ --domain cowtown.surge.sh
            fi
      # - run:
      #     name: release
      #     command: npm run semantic-release || true
